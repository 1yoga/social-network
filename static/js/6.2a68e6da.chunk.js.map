{"version":3,"sources":["Components/common/FormsControls/FormControls.module.css","Components/common/FormsControls/FormsControls.js","utils/validators/validators.js","Components/Dialogs/Dialogs.module.css","Components/Dialogs/DialogItem/DialogItem.module.css","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/AddMessageForm/AddMessageForm.js","Components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLenght","length","DialogItem","path","id","s","dialog","active","to","src","alt","Message","message","sms","maxLength50","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","state","messagesPage","dialogsElements","dialogsData","map","messagesElements","messagesData","isAuth","dialogs","dialogsItems","messages","values","addSms","newSmsText","mapStateToPropsForRedirect","auth","compose","connect","dispatch","addSmsActionCreator","Component","RedirectComponent","this","React"],"mappings":"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","file":"static/js/6.2a68e6da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__18I32\",\"error\":\"FormControls_error__1Zie4\",\"formSummaryError\":\"FormControls_formSummaryError__3z-b4\"};","import React from \"react\"\r\nimport styles from \"./FormControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>\"{error}\"</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} validate={validators} name={name} component={component} {...props}/> {text}\r\n    </div>\r\n)\r\n\r\n","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Поле обязательно для заполнения\"\r\n}\r\nexport const maxLengthCreator = (maxLenght) => (value) => {\r\n    if (value.length > maxLenght) return `Максимальная длина ${maxLenght} символов`;\r\n    return undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__MIqeO\",\"dialogsItems\":\"Dialogs_dialogsItems__3r9zi\",\"active\":\"Dialogs_active__3kRmx\",\"dialog\":\"Dialogs_dialog__--kzZ\",\"messages\":\"Dialogs_messages__2sGV0\",\"message\":\"Dialogs_message__2teJR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__2wGrV\"};","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n\r\n        <NavLink to={path}>\r\n            <img src='https://vk.com/sticker/1-68-128' alt=\"img\"/>\r\n            {props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>\r\n        {props.sms}\r\n    </div>\r\n}\r\n\r\nexport default Message;","import {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport React from \"react\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea}\r\n                       validate={[required, maxLength50]}\r\n                       name=\"newSmsText\" placeholder=\"Введите новое сообщение\"/>\r\n            </div>\r\n            <div>\r\n                <button>Отправить</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.messagesPage;\r\n\r\n    let dialogsElements = state.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id}\r\n                                                                      id={dialog.id}/>)\r\n    let messagesElements = state.messagesData.map(message => <Message sms={message.sms} key={message.id}/>)\r\n    //let newSmsText = state.newSmsText;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addSms(values.newSmsText)\r\n    }\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import {addSmsActionCreator} from \"../../redux/messages-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addSms: (newSmsText) => {\r\n            dispatch(addSmsActionCreator(newSmsText))\r\n        },\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n"],"sourceRoot":""}