{"version":3,"sources":["Components/common/FormsControls/FormControls.module.css","Components/common/FormsControls/FormsControls.js","utils/validators/validators.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","img/9f08957fdb87a044dd6b8b5ddea8b024.jpg","Components/Profile/ProfileInfo/ProfileInfo.module.css","Components/Profile/MyPosts/MyPosts.module.css","Components/Profile/MyPosts/Post/Post.module.css","Components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","Components/Profile/ProfileInfo/ProfileDataForm.jsx","Components/Profile/ProfileInfo/ProfileInfo.jsx","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLenght","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","onSubmit","formSummaryError","type","keys","contacts","map","key","s","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","userId","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","id","savePhoto","saveProfile","Preloader","descriptionBlock","alt","src","photos","large","userPhoto","avatar","target","files","initialValues","formData","then","Post","item","message","likesCount","maxLength10","AddNewPostFormRedux","Field","MyPosts","React","memo","postElements","posts","post","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","this","match","params","authorizedUserId","history","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/4.4ad9ca7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__18I32\",\"error\":\"FormControls_error__1Zie4\",\"formSummaryError\":\"FormControls_formSummaryError__3z-b4\"};","import React from \"react\"\r\nimport styles from \"./FormControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>\"{error}\"</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} validate={validators} name={name} component={component} {...props}/> {text}\r\n    </div>\r\n)\r\n\r\n","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Поле обязательно для заполнения\"\r\n}\r\nexport const maxLengthCreator = (maxLenght) => (value) => {\r\n    if (value.length > maxLenght) return `Максимальная длина ${maxLenght} символов`;\r\n    return undefined;\r\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/9f08957fdb87a044dd6b8b5ddea8b024.a4ea413a.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3znEa\",\"avatar\":\"ProfileInfo_avatar__2vs0n\",\"contact\":\"ProfileInfo_contact__UkN6L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__jcf7c\",\"posts\":\"MyPosts_posts__1bjGD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1AmFU\"};","import React, {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] =  useState(false)\r\n    let [status, setStatus] =  useState(props.status)\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus (e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateMode}><b>Статус:</b> {props.status || \"статус\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from './ProfileInfo.module.css';\r\nimport styles from \"../../common/FormsControls/FormControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>Сохранить</button></div>\r\n        {error && <div className={styles.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <b> Имя: </b> {createField(\"Имя\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b> О себе: </b> {createField(\"О себе\", \"aboutMe\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b> В поисках работы: </b> {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n        </div>\r\n        <div>\r\n            <b> Профессиональные навыки: </b> {createField(\"Профессиональные навыки\", \"lookingForAJobDescription\", [], Textarea)}\r\n        </div>\r\n        <div>\r\n            <b> Контакты: </b> {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={s.contact}>\r\n                <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: \"edit-profile\"})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../img/9f08957fdb87a044dd6b8b5ddea8b024.jpg\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, id, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            })}\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img alt=\"img\" src={profile.photos.large || userPhoto} className={s.avatar}/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={profile} isOwner={isOwner}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div>\r\n            <button onClick={goToEditMode}>Изменить</button>\r\n        </div>}\r\n        <div>\r\n            <b> Имя: </b> {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b> ID: </b> {profile.userId}\r\n        </div>\r\n        <div>\r\n            <b> О себе: </b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b> В поисках работы: </b> {profile.lookingForAJob ? \"Да\" : \"Нет\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b> Профессиональные навыки: </b> {profile.lookingForAJobDescription}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b> Контакты: </b> {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}><b> {contactTitle} : </b> {contactValue} </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img alt=\"img\" src='https://vk.com/sticker/1-68-128'/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostText\" placeholder=\"Введите сообщение\"\r\n                validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Опубликовать</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n    let postElements =\r\n        props.posts.map(post => <Post key={post.id} message={post.message} likesCount={post.likesCount}/>)\r\n\r\n    //let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3> Мои посты </h3>\r\n            <div>\r\n                <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo savePhoto={props.savePhoto}\r\n                         isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus, savePhoto, saveProfile} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\"\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto={this.props.savePhoto}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n\r\n    })\r\n;\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n)(ProfileContainer)\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}