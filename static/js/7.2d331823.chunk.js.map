{"version":3,"sources":["Components/common/FormsControls/FormControls.module.css","Components/common/FormsControls/FormsControls.js","utils/validators/validators.js","Components/Login/Login.jsx"],"names":["module","exports","FormControl","input","meta","touched","error","children","hasError","className","styles","formControl","Textarea","props","restProps","child","Input","createField","placeholder","name","validators","component","text","validate","required","value","maxLengthCreator","maxLenght","length","LoginReduxForm","reduxForm","form","handleSubmit","captchaUrl","onSubmit","type","alt","src","formSummaryError","connect","state","auth","isAuth","login","to","formData","email","password","rememberMe","captcha"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,oMCGnHC,EAAc,SAAC,GAA8C,EAA7CC,MAA8C,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAQC,EAAc,EAAdA,SAC3CC,EAAWH,GAAWC,EAC5B,OACI,sBAAKG,UAAWC,IAAOC,YAAc,KAAOH,EAAWE,IAAOJ,MAAQ,IAAtE,UACI,8BACKC,IAEJC,GAAY,qCAAQF,EAAR,WAMZM,EAAW,SAACC,GACrB,IAAOV,EAAoCU,EAApCV,MAAuBW,GAAaD,EAA7BT,KAA6BS,EAAvBE,MAApB,YAA2CF,EAA3C,2BACA,OAAO,cAACX,EAAD,2BAAiBW,GAAjB,aAAwB,oDAAcV,GAAWW,QAG/CE,EAAQ,SAACH,GAClB,IAAOV,EAAoCU,EAApCV,MAAuBW,GAAaD,EAA7BT,KAA6BS,EAAvBE,MAApB,YAA2CF,EAA3C,2BACA,OAAO,cAACX,EAAD,2BAAiBW,GAAjB,aAAwB,iDAAWV,GAAWW,QAG5CG,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAhC,IAA2CR,EAA3C,uDAAmD,GAAIS,EAAvD,uDAA8D,GAA9D,OACvB,gCACI,cAAC,IAAD,aAAOJ,YAAaA,EAAaK,SAAUH,EAAYD,KAAMA,EAAME,UAAWA,GAAeR,IADjG,IAC2GS,O,iCC7B/G,oEAAO,IAAME,EAAW,SAACC,GACrB,IAAIA,EACJ,MAAO,+KAEEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,EAAMG,OAASD,EAAW,MAAM,2GAAN,OAA6BA,EAA7B,wD,iCCLlC,2FA2BME,EAAiBC,YAAU,CAACC,KAAM,SAAjBD,EAlBL,SAAC,GAAuC,IAAtCE,EAAqC,EAArCA,aAAc1B,EAAuB,EAAvBA,MAAO2B,EAAgB,EAAhBA,WACrC,OAAO,uBAAMC,SAAUF,EAAhB,UACFf,YAAY,SAAU,QAAS,CAACO,KAAWR,KAC3CC,YAAY,uCAAU,WAAY,CAACO,KAAWR,IAAO,CAACmB,KAAM,aAC5DlB,YAAY,KAAM,aAAc,GAAID,IAAO,CAACmB,KAAM,YAAa,0DAE/DF,GAAc,qBAAKG,IAAI,MAAMC,IAAKJ,IAClCA,GAAchB,YAAY,gJAA8B,UAAW,CAACO,KAAWR,IAAO,IAEtFV,GAAS,qBAAKG,UAAWC,IAAO4B,iBAAvB,SACLhC,IAEL,8BACI,4EA2BGiC,uBALS,SAACC,GAAD,MAAY,CAChCP,WAAYO,EAAMC,KAAKR,WACvBS,OAAQF,EAAMC,KAAKC,UAGiB,CAACC,WAA1BJ,EApBD,SAAC1B,GAKX,OAAIA,EAAM6B,OACC,cAAC,IAAD,CAAUE,GAAI,aAGlB,gCACH,uCACA,cAACf,EAAD,CAAgBK,SAVH,SAACW,GACdhC,EAAM8B,MAAME,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,UASzChB,WAAYpB,EAAMoB","file":"static/js/7.2d331823.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__18I32\",\"error\":\"FormControls_error__1Zie4\",\"formSummaryError\":\"FormControls_formSummaryError__3z-b4\"};","import React from \"react\"\r\nimport styles from \"./FormControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>\"{error}\"</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} validate={validators} name={name} component={component} {...props}/> {text}\r\n    </div>\r\n)\r\n\r\n","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return \"Поле обязательно для заполнения\"\r\n}\r\nexport const maxLengthCreator = (maxLenght) => (value) => {\r\n    if (value.length > maxLenght) return `Максимальная длина ${maxLenght} символов`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-redusers\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from \"./../common/FormsControls/FormControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        {createField(\"E-mail\", \"email\", [required], Input)}\r\n        {createField(\"Пароль\", \"password\", [required], Input, {type: \"password\"})}\r\n        {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"Запомнить\")}\r\n\r\n        {captchaUrl && <img alt=\"img\" src={captchaUrl}/>}\r\n        {captchaUrl && createField(\"Введите символы с картинки\", \"captcha\", [required], Input, {})}\r\n\r\n        {error && <div className={styles.formSummaryError}>\r\n            {error}\r\n        </div>}\r\n        <div>\r\n            <button>Войти</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: \"login\"})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)"],"sourceRoot":""}